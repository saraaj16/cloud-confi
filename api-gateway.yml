#api-gateway
server:
  port: 8080

spring:
  application:
    name: gateway-api
  cloud:
    gateway:
      routes:
        # Endpoints accessibles sans authentification (authentification et réinitialisation de mot de passe)
        - id: users-auth-public
          uri: http://microservice-users-authentification:8081
          order: -1
          predicates:
            - Path=/auth/login, /auth/login/**
            - Path=/reset-password/**
        # Endpoint pour les missions (public)
        - id: users-auth-missions
          uri: http://microservice-users-authentification:8081
          order: -1
          predicates:
            - Path=/missions/**
        # Endpoints réservés au rôle ADMINISTRATEUR
        - id: users-auth-admin
          uri: http://microservice-users-authentification:8081
          predicates:
            - Path=/admin/**
        # Endpoints nécessitant une authentification (profil utilisateur)
        - id: users-auth-profile
          uri: http://microservice-users-authentification:8081
          predicates:
            - Path=/profile/**
        # Toutes les autres requêtes nécessitent une authentification (par défaut)
        - id: users-auth-default
          uri: http://microservice-users-authentification:8081
          predicates:
            - Path=/**
        # Nouveaux endpoints pour la gestion des projets
        - id: projets-api
          uri: http://microservice-projets:8082
          predicates:
            - Path=/api/projets/**
        # Nouveaux endpoints pour la gestion des templates
        - id: templates-api
          uri: http://microservice-projets:8082
          predicates:
            - Path=/api/templates/**
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allowedHeaders: "*"
            allowedMethods:
              - POST
              - GET
              - PUT
              - DELETE
              - PATCH

logging:
  level:
    org.springframework.cloud.gateway: DEBUG

eureka:
  instance:
    preferIpAddress: true
    hostname: eureka-0
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-0.eureka.default.svc.cluster.local:eureka/eureka


