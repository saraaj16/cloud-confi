server:
  port: 8080

spring:
  application:
    name: gateway-api
  cloud:
    gateway:
      routes:
        # Routes pour le microservice d'authentification des utilisateurs
        - id: users-auth-public
          uri: http://microservice-users-authentification:8081
          order: -1
          predicates:
            - Path=/auth/login, /auth/login/**
            - Path=/reset-password/**
        - id: users-auth-missions
          uri: http://microservice-users-authentification:8081
          order: -1
          predicates:
            - Path=/missions/**
        - id: users-auth-admin
          uri: http://microservice-users-authentification:8081
          predicates:
            - Path=/admin/**
        - id: users-auth-profile
          uri: http://microservice-users-authentification:8081
          predicates:
            - Path=/profile/**
        - id: users-auth-default
          uri: http://microservice-users-authentification:8081
          predicates:
            - Path=/**

        # Routes pour le nouveau microservice (microserviceprojets)
        - id: projects-route
          uri: http://microserviceprojets:8082
          predicates:
            - Path=/api/projects/**, /api/projects
        - id: templates-route
          uri: http://microserviceprojets:8082
          predicates:
            - Path=/api/templates/**, /api/templates

      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allowedHeaders: "*"
            allowedMethods:
              - POST
              - GET
              - PUT
              - DELETE
              - PATCH

logging:
  level:
    org.springframework.cloud.gateway: DEBUG

eureka:
  instance:
    preferIpAddress: true
    hostname: eureka-0
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://eureka-0.eureka.default.svc.cluster.local:eureka/eureka
